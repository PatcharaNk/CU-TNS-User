<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="13.0.1.1">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">* list_files ('C:/Users/Advantech/Desktop/CU-TNS_LightGuide_ver16-01-2018/ExecProcedures/vs2005/picTest/shot4', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">* tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">* for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">*     read_image (ImageChk, ImageFiles[Index])</l>
<c>    </c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">    read_image (ImageChk, '../Picture/ngtest2.tif')</l>
<c></c>
<l>*         shot:=4</l>
<l>* typeChk1 := 'All'</l>
<l>*     InspectDefect (ImageChk, setOfcircle, ImageChkRot, shot, typeChk1)</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">* endfor</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,1]" as_ord="1">* Image Acquisition 02: Code generated by Image Acquisition 02</c>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,3]" as_ord="1">ImageFiles[0] := '../Picture/PicRef/Good_Shot1.tif'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,3]" as_ord="2">ImageFiles[1] := '../Picture/PicRef/Good_Shot2.tif'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,3]" as_ord="3">ImageFiles[2] := '../Picture/PicRef/Good_Shot3.tif'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,3]" as_ord="4">ImageFiles[3] := '../Picture/PicRef/Good_Shot4.tif'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[2,3]" as_ord="1">    read_image (ImageRef, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[2,4]" as_ord="1">    * Image Acquisition 02: Do something</c>
<l as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<l>shot :=2</l>
<c></c>
<c>* getRegionMaster</c>
<c></c>
<l>get_region_master (ROI_Rot, RegionsRef, ImageRef, shot)</l>
<c></c>
<c>* end</c>
<c></c>
<c>*inspect_defect</c>
<c></c>
<l>inspect_defect (ROI_Rot, ImageRef, ImageChk, RegionsRef, ImageChkRot, setOfcircle)</l>
<c></c>
<c>*end</c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
